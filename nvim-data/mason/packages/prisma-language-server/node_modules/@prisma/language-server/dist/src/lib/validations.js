"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateIgnoredBlocks = exports.validateExperimentalFeatures = void 0;
const vscode_languageserver_1 = require("vscode-languageserver");
const ast_1 = require("./ast");
const constants_1 = require("./constants");
// TODO (JoÃ«l) can be removed? Since it was renamed to `previewFeatures`
// check for experimentalFeatures inside generator block
// Related code in codeActionProvider.ts, around lines 185-204
const validateExperimentalFeatures = (document, diagnostics) => {
    if (document.getText().includes('experimentalFeatures')) {
        const experimentalFeaturesRange = (0, ast_1.getExperimentalFeaturesRange)(document);
        if (experimentalFeaturesRange) {
            diagnostics.push({
                severity: vscode_languageserver_1.DiagnosticSeverity.Error,
                range: experimentalFeaturesRange,
                message: "The `experimentalFeatures` property is obsolete and has been renamed to 'previewFeatures' to better communicate what it is.",
                code: 'Prisma 5',
                tags: [2],
            });
        }
    }
};
exports.validateExperimentalFeatures = validateExperimentalFeatures;
const validateIgnoredBlocks = (schema, diagnostics) => {
    schema.linesAsArray().map(({ document, lineIndex, text }) => {
        if (text.includes('@@ignore')) {
            const block = (0, ast_1.getBlockAtPosition)(document.uri, lineIndex, schema);
            if (block) {
                diagnostics.push({
                    range: { start: block.range.start, end: block.range.end },
                    message: '@@ignore: When using Prisma Migrate, this model will be kept in sync with the database schema, however, it will not be exposed in Prisma Client.',
                    tags: [vscode_languageserver_1.DiagnosticTag.Unnecessary],
                    severity: vscode_languageserver_1.DiagnosticSeverity.Hint,
                    code: '@@ignore documentation',
                    codeDescription: {
                        href: 'https://pris.ly/d/schema-reference#ignore-1',
                    },
                });
            }
        }
        else if (text.includes('@ignore')) {
            diagnostics.push({
                range: {
                    start: { line: lineIndex, character: 0 },
                    end: { line: lineIndex, character: constants_1.MAX_SAFE_VALUE_i32 },
                },
                message: '@ignore: When using Prisma Migrate, this field will be kept in sync with the database schema, however, it will not be exposed in Prisma Client.',
                tags: [vscode_languageserver_1.DiagnosticTag.Unnecessary],
                severity: vscode_languageserver_1.DiagnosticSeverity.Hint,
                code: '@ignore documentation',
                codeDescription: {
                    href: 'https://pris.ly/d/schema-reference#ignore',
                },
            });
        }
    });
};
exports.validateIgnoredBlocks = validateIgnoredBlocks;
//# sourceMappingURL=validations.js.map