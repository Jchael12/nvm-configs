"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrismaSchema = exports.SchemaDocument = void 0;
class SchemaDocument {
    static fromTextDocument(textDocument) {
        return new SchemaDocument(textDocument.uri, textDocument.getText());
    }
    constructor(uri, content) {
        this.uri = uri;
        this.content = content;
        this.lines = content.split(/\r?\n/).map((untrimmedText, lineIndex) => ({
            document: this,
            lineIndex,
            untrimmedText,
            text: untrimmedText.trim(),
        }));
    }
    getLineContent(lineIndex) {
        return this.lines[lineIndex].text;
    }
}
exports.SchemaDocument = SchemaDocument;
class PrismaSchema {
    static singleFile(textDocument) {
        return new PrismaSchema([SchemaDocument.fromTextDocument(textDocument)]);
    }
    constructor(documents) {
        this.documents = documents;
    }
    *iterLines() {
        for (const doc of this.documents) {
            for (const line of doc.lines) {
                yield line;
            }
        }
    }
    linesAsArray() {
        return Array.from(this.iterLines());
    }
    findDocByUri(fileUri) {
        return this.documents.find((doc) => doc.uri === fileUri);
    }
    findWithRegex(regexp) {
        for (const doc of this.documents) {
            regexp.lastIndex = 0;
            const match = regexp.exec(doc.content);
            if (match) {
                return { match, documentUri: doc.uri };
            }
        }
        return undefined;
    }
}
exports.PrismaSchema = PrismaSchema;
//# sourceMappingURL=Schema.js.map