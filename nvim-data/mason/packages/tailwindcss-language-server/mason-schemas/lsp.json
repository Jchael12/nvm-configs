{"properties":{"tailwindCSS.lint.invalidApply":{"default":"error","enum":["ignore","warning","error"],"scope":"language-overridable","markdownDescription":"Unsupported use of the [`@apply` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#apply)","type":"string"},"tailwindCSS.emmetCompletions":{"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`","default":false,"type":"boolean"},"tailwindCSS.lint.invalidVariant":{"default":"error","enum":["ignore","warning","error"],"scope":"language-overridable","markdownDescription":"Unknown variant name used with the [`@variants` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#variants)","type":"string"},"tailwindCSS.includeLanguages":{"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`","default":{},"type":"object","additionalProperties":{"type":"string"}},"tailwindCSS.lint.invalidConfigPath":{"default":"error","enum":["ignore","warning","error"],"scope":"language-overridable","markdownDescription":"Unknown or invalid path used with the [`theme` helper](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#theme)","type":"string"},"tailwindCSS.lint.invalidTailwindDirective":{"default":"error","enum":["ignore","warning","error"],"scope":"language-overridable","markdownDescription":"Unknown value used with the [`@tailwind` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#tailwind)","type":"string"},"tailwindCSS.lint.recommendedVariantOrder":{"default":"warning","enum":["ignore","warning","error"],"scope":"language-overridable","markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https:\/\/tailwindcss.com\/docs\/just-in-time-mode) only)","type":"string"},"tailwindCSS.experimental.classRegex":{"scope":"language-overridable","type":"array"},"tailwindCSS.experimental.configFile":{"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to.","default":null,"type":["null","string","object"]},"tailwindCSS.classAttributes":{"items":{"type":"string"},"default":["class","className","ngClass"],"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc.","type":"array"},"tailwindCSS.showPixelEquivalents":{"markdownDescription":"Show `px` equivalents for `rem` CSS values.","default":true,"type":"boolean"},"tailwindCSS.rootFontSize":{"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`.","default":16,"type":"number"},"tailwindCSS.suggestions":{"markdownDescription":"Enable autocomplete suggestions.","default":true,"scope":"language-overridable","type":"boolean"},"tailwindCSS.inspectPort":{"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port.","default":null,"type":["number","null"]},"tailwindCSS.hovers":{"markdownDescription":"Enable hovers.","default":true,"scope":"language-overridable","type":"boolean"},"tailwindCSS.codeActions":{"markdownDescription":"Enable code actions.","default":true,"scope":"language-overridable","type":"boolean"},"tailwindCSS.colorDecorators":{"markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","default":true,"scope":"language-overridable","type":"boolean"},"tailwindCSS.validate":{"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","default":true,"scope":"language-overridable","type":"boolean"},"tailwindCSS.files.exclude":{"items":{"type":"string"},"default":["**\/.git\/**","**\/node_modules\/**","**\/.hg\/**","**\/.svn\/**"],"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting.","type":"array"},"tailwindCSS.lint.cssConflict":{"default":"warning","enum":["ignore","warning","error"],"scope":"language-overridable","markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","type":"string"},"tailwindCSS.lint.invalidScreen":{"default":"error","enum":["ignore","warning","error"],"scope":"language-overridable","markdownDescription":"Unknown screen name used with the [`@screen` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#screen)","type":"string"}},"title":"Tailwind CSS IntelliSense"}