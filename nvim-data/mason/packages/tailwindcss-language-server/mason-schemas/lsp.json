{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.experimental.configFile":{"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to.","type":["null","string","object"],"default":null},"tailwindCSS.showPixelEquivalents":{"markdownDescription":"Show `px` equivalents for `rem` CSS values.","type":"boolean","default":true},"tailwindCSS.classAttributes":{"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc.","default":["class","className","ngClass"],"type":"array","items":{"type":"string"}},"tailwindCSS.suggestions":{"scope":"language-overridable","markdownDescription":"Enable autocomplete suggestions.","type":"boolean","default":true},"tailwindCSS.hovers":{"scope":"language-overridable","markdownDescription":"Enable hovers.","type":"boolean","default":true},"tailwindCSS.codeActions":{"scope":"language-overridable","markdownDescription":"Enable code actions.","type":"boolean","default":true},"tailwindCSS.colorDecorators":{"scope":"language-overridable","markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","type":"boolean","default":true},"tailwindCSS.validate":{"scope":"language-overridable","markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","type":"boolean","default":true},"tailwindCSS.lint.cssConflict":{"enum":["ignore","warning","error"],"markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","scope":"language-overridable","type":"string","default":"warning"},"tailwindCSS.lint.invalidApply":{"enum":["ignore","warning","error"],"markdownDescription":"Unsupported use of the [`@apply` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#apply)","scope":"language-overridable","type":"string","default":"error"},"tailwindCSS.lint.invalidScreen":{"enum":["ignore","warning","error"],"markdownDescription":"Unknown screen name used with the [`@screen` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#screen)","scope":"language-overridable","type":"string","default":"error"},"tailwindCSS.inspectPort":{"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port.","type":["number","null"],"default":null},"tailwindCSS.lint.invalidVariant":{"enum":["ignore","warning","error"],"markdownDescription":"Unknown variant name used with the [`@variants` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#variants)","scope":"language-overridable","type":"string","default":"error"},"tailwindCSS.emmetCompletions":{"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`","type":"boolean","default":false},"tailwindCSS.lint.invalidConfigPath":{"enum":["ignore","warning","error"],"markdownDescription":"Unknown or invalid path used with the [`theme` helper](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#theme)","scope":"language-overridable","type":"string","default":"error"},"tailwindCSS.rootFontSize":{"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`.","type":"number","default":16},"tailwindCSS.lint.invalidTailwindDirective":{"enum":["ignore","warning","error"],"markdownDescription":"Unknown value used with the [`@tailwind` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#tailwind)","scope":"language-overridable","type":"string","default":"error"},"tailwindCSS.includeLanguages":{"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`","additionalProperties":{"type":"string"},"type":"object","default":{}},"tailwindCSS.lint.recommendedVariantOrder":{"enum":["ignore","warning","error"],"markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https:\/\/tailwindcss.com\/docs\/just-in-time-mode) only)","scope":"language-overridable","type":"string","default":"warning"},"tailwindCSS.files.exclude":{"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting.","default":["**\/.git\/**","**\/node_modules\/**","**\/.hg\/**","**\/.svn\/**"],"type":"array","items":{"type":"string"}}}}